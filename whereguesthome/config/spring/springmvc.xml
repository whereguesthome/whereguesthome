<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">


	<!-- 使用下面将代替上面的注解映射器和注解适配器 实际开发用这一种 -->
	<mvc:annotation-driven conversion-service="conversionService" />

	<!-- 自定义参数绑定 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- 日期类型转换 -->
				<bean class="com.whereguesthome.controller.Converter.CustomDateConverter" />
			</list>
		</property>


	</bean>

	<!-- <bean class="com.springmvc.controller.UserController2"/> -->

	<!-- 开启组件扫描 -->
	<context:component-scan
		base-package="com.whereguesthome.controller,com.whereguesthome.service,com.whereguesthome.imp" />

	<!-- 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<!-- 最大内存大小 -->
		<property name="maxInMemorySize" value="10240" />
		<!-- 最大文件大小，-1为不限制大小 -->
		<property name="maxUploadSize" value="-1" />
	</bean>

	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/image/" mapping="/image/**" />
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/bank_img/" mapping="/bank_img/**" />
	<mvc:resources location="/fonts/" mapping="/fonts/**" />
	<mvc:resources location="/layer/" mapping="/layer/**" />
	<mvc:resources location="/Plugins/" mapping="/Plugins/**" />
	<mvc:resources location="/products/" mapping="/products/**" />
	<mvc:resources location="/skins/" mapping="/skins/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/picture/" mapping="/picture/**" />
	<!-- <mvc:resources location="/" mapping="/**"/> -->


	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/admin/**" />
			<bean class="com.whereguesthome.interceptor.LoginHandlerIntercepter"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
</beans>
